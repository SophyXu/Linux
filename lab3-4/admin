#! /bin/bash
back()														#返回系统主界面
{
	clear
	exit
}
show_teacher_part()												#显示指定教师信息
{
	while true
	do
		echo "请输入教师工号或姓名："
		read im
		no=$(grep $im teacher_info|awk '{print $1}')
		if [ "$no" = "" ]										#判断该教师是否存在
	    	then
			na=$(grep $im teacher_info|awk '{print $2}')
			if [ "$na" = "" ]									#若该教师不存在
				then										#则弹出错误信息
					echo "无此教师信息"
					echo "---------------"
					echo "结束操作【1】?"
					echo "y/n"
					read wh
					if [ "$wh" = "y" ]
						then
						    	teacher4
					fi
				else										#若输入为工号
					no=$(grep $im teacher_info|awk '{print $1}')				#则从教师信息中读取相关信息
					echo "教师工号： $no"
					echo "教师姓名： $na"
					echo "---------------"
					sleep 1
					echo "结束操作【1】?"
					echo "y/n"
					read wh
						if [ "$wh" = "y" ]
							then
						    		teacher4
						fi
			fi
		else												#若输入为姓名
	        na=$(grep $no teacher_info|awk '{print $2}') 							#则从教师信息中读取相关信息
	        echo "教师工号： $no"
	        echo "教师姓名： $na"
	        echo "---------------"
	        sleep 1
	        echo "结束操作【1】？"
		echo "y/n"
	        read wh
	        if [ "$wh" = "y" ]
		    then
		        teacher4
	        fi
	fi
    done
}
show_teacher_all()												#显示全部教师信息
{
	echo "---------------"
	echo "工号   姓名"
	echo "---------------"
	cat teacher_info
	echo "---------------"   
	sleep 1
	echo "任意键结束操作【2】"
	read random
	teacher4    
}
teacher1()													#添加教师帐号
{
	clear
	while true
	do
		echo "作业管理系统>管理员登录>管理员界面>教师信息管理>添加教师帐号"				#显示当前你所在位置
		echo "========================================================="
		echo "【输入0返回教师信息管理界面】"
		echo " "
		echo "请输入教师工号："
		read num											#读入教师工号
		if [ "$num" = "0" ]										#若为0，则返回主界面
			then
				login
		fi    
		t=$(grep $num teacher_info|awk '{print $1}')							#判断该工号
		if [ "$t" != "" ]										
			then
				zenity --info --title='错误信息' --text="该教师已存在！"				#不存在，则弹出对话框显示错误信息
				clear
			else
				echo "请输入教师姓名："								#若存在
				read name
				echo $num $name>>teacher_info							#则将教师工号、姓名写入教师信息
				mkdir "$name"
				echo "请输入教师登录密码："
				read password
				echo $num $password>>teacher_login						#将教师工号、登录密码写入教师信息
				zenity --info --title='提示信息' --text="创建成功！"				#弹出对话框显示创建成功
				clear
		fi
	done
}
teacher2()													#修改教师帐号
{
	while true
	do
		clear
		echo "作业管理系统>管理员登录>管理员界面>教师信息管理>修改教师帐号"				#显示当前所在位置
		echo "========================================================="
		echo "【输入0返回教师信息管理界面】"
		echo " "
		echo "请输入教师工号或姓名："									#读入教师工号或姓名
		read im
		if [ "$im" = "0" ]										#若为0，则返回主界面
			then
		        	login
		fi   	
		no=$(grep $im teacher_info|awk '{print $1}')
		if [ "$no" = "" ]										#判断该教师是否存在
			then
				na=$(grep $im teacher_info|awk '{print $2}') 
				if [ "$na" = "" ]								#若不存在，则显示错误信息
					then
						echo "无此教师信息"
						echo "---------------"
						echo "结束操作?"
						echo "y/n"
						read wh
						if [ "$wh" = "y" ]
							then	
						    		teacher
						fi
					else									#输入教师工号，则显示教师信息
						echo "---------------"
						no=$(grep $im teacher_info|awk '{print $1}')
						echo "教师工号： $no"
						echo "教师姓名： $na"
						echo "---------------"
						sleep 1
						echo "修改教师工号?"						#判断是否修改工号
						echo "y/n"
						read wh
						if [ "$wh" = "y" ]						
							then
							 	echo "将原教师工号修改为："				
								read newnum					#读入新工号
								sed -i 's/'$no'/'$newnum'/g' teacher_info	#将教师信息中的工号替换为新工号
								sed -i 's/'$no'/'$newnum'/g' teacher_login	#将教师登录信息中的工号替换为新工号
								no=$newnum
								zenity --info --title='提示信息' --text="教师工号修改成功！"    
						fi
						echo "修改教师姓名？"						#判断是否修改姓名
						echo "y/n"
						read wh
						if [ "$wh" = "y" ]
							then
								echo "---------------"
								echo "$no"
								echo "$na"
								echo "将原教师姓名修改为："		
								read newname					#读入新姓名
								sed -i '/^'$no'/a\'$no' '$newname'' teacher_info #将教师信息中的工号替换为新工号
								sed -i '/'$no' '$na'/d' teacher_info
								mv ./"$na" ./"$newname"				#将教师目录名称替换成新姓名
								zenity --info --title='提示信息' --text="教师姓名修改成功！"  
				
						fi				    
				fi
	    	else
			na=$(grep $no teacher_info|awk '{print $2}') 						#若输入为教师姓名，则显示教师信息
			echo "教师工号： $no"
			echo "教师姓名： $na"
			echo "---------------"
			sleep 1
				echo "修改教师工号?"								#判断是否修改工号
				echo "y/n"
				read wh
				if [ "$wh" = "y" ]
				    then
				 	echo "将原教师工号修改为："
					read newnum								#读入新工号
					sed -i 's/'$no'/'$newnum'/g' teacher_info				#将教师信息中的工号替换为新工号
					sed -i 's/'$no'/'$newnum'/g' teacher_login				#将教师登录信息中的工号替换为新工号
					no=$newnum
					zenity --info --title='提示信息' --text="教师工号修改成功！"    		#弹出对话框提示修改成功
				fi
				echo "修改教师姓名？"								#判断是否修改姓名
				echo "y/n"
				read wh
				if [ "$wh" = "y" ]
					then	
						echo "将原教师姓名修改为："
						read newname
						sed -i '/^'$no'/a\'$no' '$newname'' teacher_info		#将教师信息中的工号替换为新工号
						sed -i '/'$no' '$na'/d' teacher_info
						mv "$na" "$newname"						#将教师目录名称替换成新姓名
						zenity --info --title='提示信息' --text="教师姓名修改成功！"  	#弹出对话框提示修改成功
				fi
		fi
	done
}
teacher3()													#删除教师帐号
{
	while true
	do
		clear
		echo "作业管理系统>管理员登录>管理员界面>教师信息管理>删除教师帐号"				#显示当前所在位置
		echo "========================================================="
		echo "【输入0返回教师信息管理界面】"
		echo " "
		echo "请输入教师工号或姓名："									#读入要删除的教师信息
		read im
		if [ "$im" = "0" ]										#若为0，则返回主界面
			then
		        	teacher
		fi   	
		no=$(grep $im teacher_info|awk '{print $1}')							#判断该教师是否存在
		if [ "$no" != "$im" ]
			then
				na=$(grep $im teacher_info|awk '{print $2}') 
				if [ "$na" != "$im" ]								#若不存在，则提示错误信息
					then
						echo "无此教师信息"
						echo "---------------"
						echo "结束操作?"
						echo "y/n"
						read wh
						    if [ "$wh" = "y" ]
							then
								teacher
						    fi
				else	
					no=$(grep $im teacher_info|awk '{print $1}')				#若输入为工号，则显示出该教师的信息
					echo "教师工号： $no"
					echo "教师姓名： $na"
					echo "---------------"
					sleep 1
					echo "删除该教师帐号?"							#确认是否删除该教师
					echo "y/n"
					read wh
					if [ "$wh" = "y" ]
						then
							sed -i '/'$no' '$na'/d' teacher_info			#在教师信息中删除
							sed -i '/'$no'/d' teacher_login				#在教师登录信息中删除
							sed -i '/'$na'/d' course_student			#在课程与学生的关联文件中删除
							rm -r ./"$na"						#删除该教师的目录
							zenity --info --title='提示信息' --text="教师工号删除成功！"	#弹出对话框提示删除成功
					fi				    
				fi
			else
				na=$(grep $no teacher_info|awk '{print $2}') 					#若输入为姓名，则显示出该教师的信息
				echo "教师工号： $no"
				echo "教师姓名： $na"
				echo "---------------"
				sleep 1
				echo "删除该教师帐号?"
				echo "y/n"
				read wh
				if [ "$wh" = "y" ]
					then	
						sed -i '/'$no' '$na'/d' teacher_info				#在教师信息中删除
						sed -i '/'$no'/d' teacher_login					#在教师登录信息中删除
						sed -i '/'$na'/d' course_student				#在课程与学生的关联文件中删除
						rm -r ./"$na"							#删除该教师的目录
						zenity --info --title='提示信息' --text="教师工号删除成功！"	#弹出对话框提示删除成功
				fi	
		fi
	done
}
teacher4()
{
	clear
	while true
	do
		echo "作业管理系统>管理员登录>管理员界面>教师信息管理>显示教师帐号"				#显示教师帐号界面
		echo "======================================="
		echo "               请选择操作："
		echo "               【1】-显示指定教师帐号"
		echo "               【2】-显示全部教师帐号"
		echo "               【0】-返回教师信息管理"
		echo "======================================="	
		read num
		case $num in											#读入用户输入
			1)show_teacher_part;;									#1显示指定教师帐号
			2)show_teacher_all;;									#2显示全部教师帐号
			0)teacher;;										#0返回主界面
			*)echo"请输入正确的数字"								#其他数字，显示错误信息
		       	sleep 1
			clear;;
		esac
	done
}
teacher()
{
	while true
	do
		clear
		echo "作业管理系统>管理员登录>管理员界面>教师信息管理"						#教师信息管理界面
		echo "======================================="
		echo "               请选择操作："
		echo "               【1】-创建教师帐号"
		echo "               【2】-修改教师帐号"
		echo "               【3】-删除教师帐号"
		echo "               【4】-显示教师帐号"
		echo "               【0】-返回管理员界面"
		echo "======================================="
		read choice											#读入用户输入
		case $choice in
			1)teacher1;;										#1创建教师帐号
		        2)teacher2;;										#2修改教师帐号
		        3)teacher3;;										#3删除教师帐号
		        4)teacher4;;										#4显示教师帐号
			0)login;;										#0返回主界面
			*)echo"请输入正确的数字"								#其他数字，提示错误信息
			sleep 1
			clear;;
		esac
       done  
}
crse1()														#新建课程信息
{
    while true
    do
	clear
	echo "作业管理系统>管理员登录>$username管理员界面>新建课程信息"						#显示当前位置
	echo "=================================================="
        echo "--输入0返回管理员界面--"
	echo " "
	echo "该课程名称："											#读入新课程名
	read name
        if [ "$name" = "0" ]											#若为0，则返回主界面
	    then
                login
        fi
	echo "授课老师："											#读入新教师姓名
	read teacher
	test=$(grep $name courses|grep $teacher|awk '{print $1}')						#判断该课程名是否已存在
	if [ "$test" = "$name" ]
	   	then
			zenity --info --title='错误信息' --text="该课程已存在！"					#若已存在，则弹出错误信息对话框
		else
			echo "上课时间："									#读入上课时间
			read time
			echo "上课地点："									#读入上课地点
			read loc
		   	echo $name $teacher $time $loc>>courses							#将上课信息写入课程信息文件
			mkdir ./"$teacher"/"$name"						#在该教师目录下新建该课程文件夹，供学生提交作业
			touch 作业 ./"$teacher"/"$name"				
			zenity --info --title='提示信息' --text="$name课程创建成功！"				#弹出对话框显示创建成功
	fi
    done
}
crse2()
{
    while true
    do
	clear
	echo "作业管理系统>管理员登录>$username管理员界面>编辑课程信息"						#显示当前所在位置	
	echo "=================================================="
        echo "--输入0返回管理员界面--"
	echo " "
	echo "请选择要编辑的课程："
	sort -n courses|cat courses|awk '{print $1}'|uniq							#显示所有课程名称，并过滤掉重复的名称
	echo " "	
	read course
        if [ "$course" = "0" ]
	    then
                login												#若为0，则返回主界面
        fi
	test=$(sort -n courses|grep $course courses|awk '{print $1}'|uniq)					#对courses文件做grep操作
	if [ "$test" != "$course" ]
	   then													#检查该课程是否存在
		zenity --info --title='错误信息' --text="该课程不存在！" 					#若不存在，则弹出错误信息对话框
	   else		
		grep $course courses|awk '{print $2}'								#显示所有教授该课程的老师
		echo "请选择要编辑课程信息的教师："
		read teacher
		echo "----------------------------"								#显示该老师上此门课的信息
		echo "【1】课程名称："
		grep $course courses|grep $teacher|awk '{print $1}'
		echo "【2】上课时间："
		t=$(grep $course courses|grep $teacher|awk '{print $3}')
		echo "$t"
		echo "【3】上课地点："
		d=$(grep $course courses|grep $teacher|awk '{print $4}')
		echo "$d"
		echo "----------------------------"
		echo " "
		echo "请选择要编辑信息的编号："
		read num
		case $num in
			1)echo "请输入新课程名称："								#编辑课程名称
			read a
			sed -i '/'$course' '$teacher'/a\'$a' '$teacher' '$t' '$d'' courses			#修改课程信息中的课程名称
			sed -i '/'$course' '$teacher' '$t' '$d'/d' courses					
			mv ./"$teacher"/"$course" ./"$teacher"/"$a"						#修改该课程目录名称 		
			sed -i '/'$course' '$teacher'/a\'$a' '$teacher' '$t' '$d'' course_student		#修改关联该上课学生信息的课程名称
			sed -i '/'$course' '$teacher' '$t' '$d'/d' course_student			
			zenity --info --title='提示信息' --text="课程名称编辑完成！"				#弹出对话框提示编辑成功
			;;
		        2)echo "请输入新上课时间："
			read a
			sed -i '/'$course' '$teacher'/a\'$course' '$teacher' '$a' '$d'' courses			#修改课程信息中的上课时间
			sed -i '/'$course' '$teacher' '$t' '$d'/d' courses		
			zenity --info --title='提示信息' --text="上课时间编辑完成！"				#弹出对话框提示编辑成功
			;;
			3)echo "请输入新上课地点："
			read a
			sed -i '/'$course' '$teacher' '$t' '$d'/a\'$course' '$teacher' '$t' '$a'' courses	#修改课程信息中的上课地点
			sed -i '/'$course' '$teacher' '$t' '$d'/d' courses
			zenity --info --title='提示信息' --text="上课地点编辑完成！"				#弹出对话框提示编辑成功
			;;
			*)echo"请输入正确的数字"
			sleep 1
		esac		
	fi
    done
}
crse3()
{
	while true
	do
		clear
		echo "作业管理系统>管理员登录>$username管理员界面>删除课程信息"					#显示目前所在位置
		echo "=================================================="
		echo "--输入0返回管理员界面--"
		echo " "
		echo "请选择要删除的课程："
		sort -n courses|cat courses|awk '{print $1}'|uniq						#显示所有课程名称，并过滤掉重复的名称
		echo " "	
		read course											#读入用户输入
		if [ "$course" = "0" ]										#若为0，则返回主界面
			then
		        	login
		fi
		test=$(sort -n courses|grep $course courses|awk '{print $1}'|uniq)				#对courses文件做grep操作
		if [ "$test" != "$course" ]									#检查该课程是否存在
			then											#若不存在，则弹出错误信息对话框
				zenity --info --title='错误信息' --text="该课程不存在！" 
		   else												#若存在
			grep $course courses|awk '{print $2}'							#显示所有教授该课程的老师
			echo "选择该课程要删除的教师："
			read teacher
			echo "【1】课程名称："									#显示该老师上此门课的信息
			grep $course courses|grep $teacher|awk '{print $1}'
			echo "【2】上课时间："
			t=$(grep $course courses|grep $teacher|awk '{print $3}')
			echo "$t"
			echo "【3】上课地点："
			d=$(grep $course courses|grep $teacher|awk '{print $4}')
			echo "$d"
			echo " "
			echo "确认删除？"
			echo "y/n"
			read wh
			if [ "$wh" = "y" ]
				then
					sed -i '/'$course' '$teacher'/d' courses				#删除课程信息
					sed -i '/'$course' '$teacher'/d' course_student				#删除上该课程的学生信息
					rm -r ./"$teacher"/"$course"						#删除该课程目录
					zenity --info --title='提示信息' --text="$name课程删除成功！"		#弹出对话框提示删除成功
			fi
		fi
    done
}
course()
{
	while true
	do
		clear
		echo "作业管理系统>管理员登录>管理员界面>课程信息管理"						#显示目前所在位置
		echo "======================================="							#显示课程信息管理界面
		echo "               请选择操作："
		echo "               【1】-新建课程"
		echo "               【2】-修改课程"
		echo "               【3】-删除课程"
		echo "               【0】-返回管理员界面"
		echo "======================================="
		read choice											#读入用户输入
		case $choice in
			1)crse1;;										#1新建课程
		        2)crse2;;										#2修改课程
			3)crse3;;										#3删除课程
			0)login;;										#0返回主界面
			*)echo"请输入正确的数字"								#其他数字，提示“请输入正确数字”
			sleep 1
			clear;;
		esac
       done
}
new()
{
	while true
		do
		clear
		echo "作业管理系统>管理员登录>$username管理员界面>新建管理员"					#显示新建管理员界面
		echo "===================================================="
		echo "--输入0返回管理员界面--"
		echo " "
		echo "请输入新管理员用户名："									#读入新用户名
		read name						
		if [ "$course" = "0" ]										#若为0，则返回菜单界面
			then
		        	login
		fi
		echo "请输入密码："										#否则，输入密码
		read password
		echo $name $password>>admin_login								#将用户名、密码写入写入admin_login文件
		zenity --info --title='提示信息' --text="$name管理员创建成功！"					#弹出对话框提示登录成功
	done	
}
login()
{
	while true
	do
		clear
		echo "作业管理系统>管理员登录>管理员界面"							#显示管理员菜单界面
		echo "======================================="
		echo "        欢迎管理员 $username ,请选择操作"
		echo "               【1】-教师"
		echo "               【2】-课程"
		echo "               【3】-新建管理员"
		echo "               【0】-返回系统主界面"
		echo "======================================="
		read choice											#读入选择
		case $choice in
			1)teacher;;										#1进入教师信息管理界面
		        2)course;;										#2进入课程管理界面
			3)new;;											#3进入新建管理员界面	
			0)back;;										#0返回系统主界面
			*)echo"请输入正确的数字"								#其他数字，提示“请输入正确数字”
			sleep 1
			clear;;
		esac
       done
}
while true
	do
		clear												#显示管理员登录界面
		echo "作业管理系统>管理员登录"
		echo "     -------------------------"
		echo "    |        管理员登录        |"
		echo "     ------------------------- "
		echo "请输入管理员用户名："
	      	echo "<输入0返回系统主界面>"
		echo " "
		read username											#读入用户名
		if [ "$username" = "0" ]									#若为0，则进入back函数退出
			then
				back
		fi												#否则，判断用户名是否存在
		a=$(grep $username admin_login|awk '{print $1}')
		if [ "$a" != "$username" ]
			then
				zenity --info --title='错误信息' --text="该用户名不存在"				#若不存在，则弹出错误信息对话框
				clear
		    else
			echo "请输入管理员密码："								#若存在，则读入密码
			read pass
			p=$(grep $username admin_login|awk '{print $2}')
			if [ "$p" != "$pass" ]
				then
					zenity --info --title='错误信息' --text="密码错误！"		#若密码不正确，则弹出错误信息对话框
				else					
					zenity --info --title='管理员登录' --text="管理员 $username 登录成功！"	#若密码正确
					login									#则弹出登录成功对话框，并进入菜单界面
			fi
		fi
	done
